{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Business Rules!",
	"scopeName": "source.br",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#references"
		}
	],
	"repository": {
		"numbers": {
			"patterns": [
				{
					"match": "[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?",
					"name": "constant.numeric"
				},
				{
					"match": "(?<=^([^\"]|\"[^\"]*\")*)\\w(?<!\\d)[\\w'-]*",
					"name": "string.unquoted"
				}
]
		},
		"comments": {
			"patterns": [{
					"match": "(?:(?:^|\\r?\\n) *(\\d{1,5})? *([a-zA-Z_]\\w*: *)?|!: *)(?i)(DATA) ([^!\\r\\n]*)",
					"captures": {
						"1": {
							"name": "linenumber.br"
						},
						"2": {
							"name": "string.regexp.line-label.br"
						},
						"3": {
							"name": "keyword.statement.br"
						},
						"4": {
							"patterns": [
								{
									"include": "#numbers"
								},
								{
									"include": "#strings"
								}
							]
						}
					}
				},{
					"match": "(?:(?:^|\\r?\\n) *(\\d{1,5})? *([a-zA-Z_]\\w*: *)?|!: *)(?i)(FORM) ([^!\\r\\n]*)",
					"captures": {
						"1": {
							"name": "linenumber.br"
						},
						"2": {
							"name": "string.regexp.line-label.br"
						},
						"3": {
							"name": "keyword.statement.br"
						},
						"4": {
							"patterns": [{
								"match": "\\b(?i)(PIC)\\((.*?)\\)",
								"captures": {
									"1": {
										"name": "keyword.other"
									},
									"2": {
										"patterns": [{
											"name": "constant.other.character-class.regexp",
											"match": "(?i)(Z|#|\\$|\\*|\\+|-|\\^|B|CR|DR|DB|D|,|\\.)"
										},{
											"name": "string",
											"match": "\\S"
										}]
									}
								}
							},{
								"name": "keyword.other",
								"match": "\\b(?i)(BL|BH|B|CC|CR|C|DH|DL|DT|D|GF|GZ|G|L|NZ|N|POS|PD|PIC|P|SKIP|S|V|X|ZD)\\b"
							},{
								"match": "\\b\\d+(\\.\\d+)?\\b",
								"name": "constant.numeric.br"
							},{
								"match": "(?i)(?<=\\b[a-z]+\\s+)[a-z_]\\w+\\b",
								"name": "variable.numeric.br"		
								},{
								"match": "\\b(\\w[\\w\\d]*) *\\*",
								"captures": {
									"1": {
										"name": "variable.numeric.br"		
									}
								}
							},{
								"include": "#strings"
							}]
						}
					}
				},{
					"match": "(?:(?:^|\\r?\\n) *(\\d{1,5})? *([a-zA-Z_]\\w*: *)?|!: *)(?i)(if|else|end if|for|next|do while|do until|loop|exit do|do|goto|gosub|return)(?!:)\\b",
					"captures": {
						"1": {
							"name": "linenumber.br"
						},
						"2": {
							"name": "string.regexp.line-label.br"
						},
						"3": {
							"name": "keyword.control.br"
						}
					}
				},{
					"match": "(?:(?:^|\\r?\\n) *(\\d{1,5})? *([a-zA-Z_]\\w*: *)?|!: *|(?i)(then +|else +))(?i)(CHAIN|CLOSE|CONTINUE|DATA|DEF|DELETE|DIM|DISPLAY|END DEF|END IF|END|EXECUTE|EXIT|FIELDS|FNEND|FORM|GOSUB|GOTO|INPUT(\\s+FIELDS)?|KEY|LET|LIBRARY|LINPUT|MENU|MENU TEXT|MENU DATA|MENU STATUS|ON ERROR|ON FKEY|ON|OPEN|OPTION|PAUSE|PRINT(\\s+FIELDS)?|USING|BORDER|RANDOMIZE|READ|REREAD|RESTORE|RETRY|RETURN|REWRITE|RINPUT(\\s+FIELDS)?|SCR_FREEZE|SCR_THAW|SELECT|STOP|WRITE|TRACE|USE)(?!:)\\b",
					"captures": {
						"1": {
							"name": "linenumber.br"
						},
						"2": {
							"name": "string.regexp.line-label.br"
						},
						"3": {
							"name": "keyword.control.br"
						},
						"4": {
							"name": "keyword.statement.br"
						}
					}
				},
				{
					"match": "(?:^|\\r?\\n) *(\\d{1,5} *)?([a-zA-Z_]\\w*:)(?! *(\\r?\\n|$))",
					"captures": {
						"1": {
							"name":"linenumber.br"
						},
						"2": {
							"name":"string.regexp.line-label.br"
						}
					}
				},
				{
					"match": "(?:^|\\r?\\n) *(\\d{1,5})\\b",
					"captures": {
						"1": {
							"name":"linenumber.br"
						}
					}
				},{
				"name": "comment.block",
				"begin": "/\\*",
				"end": "\\*/",
				"patterns": [{
					"match": "\\@param",
					"name": "comment.block.documentation"
				}]
			},{
				"match": "(?i)\\brem\\b.*",
				"name": "comment.line.br"
			},{
				"name": "comment.line",
				"match": "!(\\r?\\n|[^:\\r\\n].*?(?=!:|\\r?\\n))",
				"captures": {
					"1": {
						"patterns": [
							{
								"name": "keyword.control.lexi.br",
								"match": "(?i)#(include|define|select|case else|end select|case|autonumber)#"
							}
						]
					}
				}
			}]
		},
		"commands": {
			"name": "keyword.other.br-command",
			"match": "\\b(?i:ALERT|AUTO|BREAK|ChDIR|CLEAR|CONFIG|COPY|DATE|DEBUG CONNECT|DELETE|DIR|DISPLAY|DROP|EDIT|FREE|GO|GO END|INDEX|LIST|LOAD|MERGE|MKDIR|PROC|PROCERR RETURN|PROCERR STOP|PROTECT|RENAME|RENUM|REPLACE|RMDIR|RUN|SAVE|SKIP|SORT|STATUS|SUBPROC|SYSTEM|TIME|TYPE|VERIFY)\\b"
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double",
				"begin": "\"",
				"end": "(\"\"|[^\"])*(\"|\\n)"
				},{
				"name": "string.quoted.single",
				"begin": "'",
				"end": "(''|[^'])*'"
			},{
				"name": "string.interpolated",
				"begin": "`",
				"end": "`",
				"patterns": [
					{
						"begin": "{{",
						"end": "}}",
						"captures": {
							"0": {
								"name": "constant.character.escape"
							}
						},
						"patterns": [
							{
								"include": "$self"
							}
						]
					}
				]
			}]
		},
		"keywords": {
			"patterns": [				
				{
					"name": "keyword.control.lexi.br",
					"match": "(?i)#(include|define|select|case else|end select|case|autonumber)#"
				},{
					"match": "(:=|\\+=|\\-=|\\*=|\\/=|=)",
					"name": "keyword.operator.assignment.br"
				},
				{
					"match": "(?i)\\b(And|Not|Or)\\b",
					"name": "keyword.operator.logical.br"
				},
				{
					"match": "~",
					"name": "keyword.operator.logical.br"
				},
				{
					"match": "(<|>|<>|<=|>=|~=|==)",
					"name": "keyword.operator.comparison.br"
				},
				{
					"match": "(\\+|\\-|\\*|\\/|\\&)",
					"name": "keyword.operator.mathematical.br"
				},
				{
					"match": "\\b(?i:if|then|else|end if|for|next|do|while|loop|until|exit do|goto|gosub)\\b",
					"name": "keyword.control.br"
				},
				{
					"match": "\\b(?i:ALTERNATE|ATTR|BASE|BORDER|DISPLAY|DROP|EVENT|EXTERNAL|FIELDS|FILES|INTERNAL|INVP|KEYED|NATIVE|NOFILES|NOKEY|NONE|OUTIN|OUTPUT|REC(?==)|RELATIVE|RELEASE|RESERVE|RESUME|RETAIN|SEARCH|SELECT|SEQUENTIAL|SHIFT|TO|USE|USING|WAIT)\\b",
					"name": "keyword.other.br"
				},
				{
					"match": "\\b(?i:CONV|DUPREC|EOF|EOL|ERROR|IOERR|LOCKED|NOKEY|NOREC|IGNORE|OFLOW|PAGEOFLOW|SOFLOW|ZDIV|TIMEOUT)\\b",
					"name": "keyword.errorcondition.br"
				},
				{
					"match": "\\b(?i:COLLATE|OPTION)\\b",
					"name": "keyword.option.br"
				},
				{
					"match": "^\\s*(?i:MAT)\\b",
					"name": "keyword.statement.br"
				}
			]
		},
		"references": {
			"patterns": [{
				"match": "(?i)\\bfn\\w[\\w\\d]*\\$?",
				"name": "entity.name.function.br"
			},{
				"match": "\\b\\d+(\\.\\d+)?\\b",
				"name": "constant.numeric.br"
			},
			{
				"match": "(\\b(?i:BR_FileName\\$|BRErr\\$|CForm\\$|Chr\\$|Cnvrt\\$|Date\\$|Decrypt\\$|Encrypt\\$|Env\\$|File\\$|Help\\$|Hex\\$|KStat\\$|Login_Name\\$|LPad\\$|LTrm\\$|Lwrc\\$|Max\\$|Min\\$|Msg\\$|OS_FileName\\$|Pic\\$|Program\\$|RPad\\$|Rpt\\$|RTrm\\$|Session\\$|SRep\\$|Str\\$|Time\\$|Trim\\$|UnHex\\$|UprC\\$|UserID\\$|Variable\\$|WBPlatform\\$|WBVersion\\$|WSID\\$|Xlate\\$))",
				"name": "entity.name.function.br"
			},
			{
				"match": "\\b(?i:Abs|AIdx|Atn|Bell|Ceil|CmdKey|Cnt|Code|CoS|CurCol|CurFld|CurPos|CurRow|CurTab|CurWindow|Date|Days|Debug_Str|DIdx|Err|Exists|Exp|File|FileNum|FKey|FP|FreeSp|Inf|Int|IP|KLn|KPs|KRec|Len|Line|Lines|LineSPP|Log|LRec|Mat2Str|Max|Min|Mod|Msg|MsgBox|NewPage|Next|NxtCol|Nxtfld|NxtRow|Ord|Pi|Pos|Printer_List|ProcIn|Rec|Rem|RLn|Rnd|Round|Serial|SetEnv|Sgn|Sin|Sleep|Sqr|Srch|Str2Mat|Sum|Tab|Tan|Timer|UDim|Val|Version)(?=[^\\w\\d$]|$)",
				"name": "entity.name.function.br"
			},
			{
				"match": "\\b(?i:mat\\s+(\\w[\\w\\d]*)\\$)",
				"name": "variable.array.string.br"
			},
			{
				"match": "\\b(\\w[\\w\\d]*)\\$",
				"name": "variable.string.br"
			},
			{
				"match": "\\b(\\w[\\w\\d]*)",
				"name": "variable.numeric.br"
			}]
		}
	}
}